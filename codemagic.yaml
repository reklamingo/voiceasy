workflows:
  capacitor_ios_release:
    name: Voiceasy iOS (Capacitor) – Release
    max_build_duration: 60
    instance_type: mac_mini_m1

    environment:
      xcode: 15.4
      node: 20.11.1
      vars:
        BUNDLE_ID: com.voiceasy.app
        APPLE_TEAM_ID: 377ECJLA2T
        SCHEME: App
      groups:
        - app_store_connect   # APP_STORE_CONNECT_* değişkenleri bu grupta

    scripts:
      - name: Install dependencies
        script: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            echo "package-lock.json yok, npm install ile devam ediliyor"
            npm install --no-audit --no-fund
          fi

      - name: Build web assets
        script: |
          if npm run | grep -q " build"; then
            npm run build
          else
            echo "package.json'da build script yok, atlanıyor"
          fi

      - name: Ensure iOS platform exists (Capacitor)
        script: |
          if ! npm ls @capacitor/ios --depth=0 >/dev/null 2>&1; then
            npm install @capacitor/ios --save-exact
          fi
          if [ ! -d "ios" ]; then
            echo "Capacitor iOS platformu ekleniyor..."
            npx cap add ios
          else
            echo "iOS platformu zaten var, devam."
          fi

      - name: Capacitor sync (iOS project)
        script: |
          npx cap config set appId com.voiceasy.app appName "Voiceasy"
          npx cap sync ios

      - name: Install CocoaPods
        script: |
          cd ios/App
          pod install --repo-update

      - name: Fetch signing files (auto from App Store Connect)
        script: |
          for v in APP_STORE_CONNECT_ISSUER_ID APP_STORE_CONNECT_KEY_IDENTIFIER APP_STORE_CONNECT_PRIVATE_KEY BUNDLE_ID; do
            if [ -z "${!v}" ]; then
              echo "ERROR: $v boş. Codemagic > Environment variables / group 'app_store_connect' kontrol edin."
              exit 1
            fi
          done

          # Sertifika için RSA private key (p12 üretimi için)
          openssl genrsa -out certificate_private_key.pem 2048

          # P12'yi parolasız üret
          app-store-connect fetch-signing-files "$BUNDLE_ID" \
            --issuer-id "$APP_STORE_CONNECT_ISSUER_ID" \
            --key-id "$APP_STORE_CONNECT_KEY_IDENTIFIER" \
            --private-key "$APP_STORE_CONNECT_PRIVATE_KEY" \
            --type IOS_APP_STORE \
            --create \
            --certificate-key @file:certificate_private_key.pem \
            --p12-password ""

      - name: Add certificates to keychain
        script: |
          KEYCHAIN_PATH="$HOME/Library/Keychains/login.keychain-db"
          security unlock-keychain -p "" "$KEYCHAIN_PATH" || true
          for P12 in "$HOME/Library/MobileDevice/Certificates"/*.p12; do
            echo "Importing $P12"
            security import "$P12" -k "$KEYCHAIN_PATH" -P "" -T /usr/bin/codesign -T /usr/bin/security
          done
          security set-key-partition-list -S apple-tool:,apple: -s -k "" "$KEYCHAIN_PATH" || true

      - name: Apply provisioning profiles
        script: |
          cd ios/App
          xcode-project use-profiles --project . --warn-only

      - name: Build .ipa
        script: |
          cd ios/App

          # Workspace varsa onunla, yoksa xcodeproj ile derle
          if [ -d "App.xcworkspace" ]; then
            WS_OPT='--workspace App.xcworkspace'
            echo "Using workspace App.xcworkspace"
          else
            WS_OPT='--project App.xcodeproj'
            echo "Workspace yok, project ile derleniyor"
          fi

          # Not: signing/profil önceki adımlarda ayarlandı; burada sade komut yeterli
          xcode-project build-ipa \
            $WS_OPT \
            --scheme "$SCHEME" \
            --config Release

      - name: Upload to App Store Connect (no auto-submit)
        script: |
          # IPA'yı otomatik bul
          IPA_PATH="$(find . -type f -name '*.ipa' -o -name '*.IPA' | head -n 1)"
          if [ -z "$IPA_PATH" ]; then
            IPA_PATH="$(find .. -type f -name '*.ipa' -o -name '*.IPA' | head -n 1)"
          fi
          if [ -z "$IPA_PATH" ]; then
            IPA_PATH="$(find ../../ -type f -name '*.ipa' -o -name '*.IPA' | head -n 1)"
          fi
          if [ -z "$IPA_PATH" ]; then
            echo "IPA bulunamadı, build çıktısını kontrol edin."; exit 1
          fi
          echo "Uploading IPA: $IPA_PATH"

          app-store-connect publish \
            --path "$IPA_PATH" \
            --issuer-id "$APP_STORE_CONNECT_ISSUER_ID" \
            --key-id "$APP_STORE_CONNECT_KEY_IDENTIFIER" \
            --private-key "$APP_STORE_CONNECT_PRIVATE_KEY" \
            --submit-for-review=false

    artifacts:
      - ios/App/build/ios/ipa/*.ipa
      - build/ios/ipa/*.ipa
      - ~/Library/Developer/Xcode/Archives/**/*.xcarchive

workflows:
  capacitor_ios_release:
    name: Voiceasy iOS (Capacitor) â€“ Release
    instance_type: mac_mini_m1

    environment:
      vars:
        APP_ID: "com.voiceasy.app"
        APP_NAME: "Voiceasy"
        APPLE_TEAM_ID: "377ECJLA2T" # your Apple Team ID; change if needed
        XCODE_WORKSPACE: "ios/App/App.xcworkspace"
        XCODE_SCHEME: "App"
      groups:
        # Create these secure variables in Codemagic UI:
        # - APP_STORE_CONNECT_KEY_IDENTIFIER (Key ID)
        # - APP_STORE_CONNECT_ISSUER_ID (Issuer ID)
        # - APP_STORE_CONNECT_PRIVATE_KEY (paste .p8 file content)
        # - APPLE_ID (optional)
        # - APP_SPECIFIC_PASSWORD (optional)
        - app_store_connect

    scripts:
      - name: Install Node + deps
        script: |
          node -v || true
          npm ci || npm install

      - name: Add & sync iOS platform
        script: |
          npx cap add ios || true
          npx cap sync ios
          # Ensure correct bundle identifier in Xcode project
          npx cap run ios --list || true

      - name: CocoaPods install
        script: |
          cd ios/App
          pod install --repo-update

      - name: Fetch & apply signing (with App Store Connect API key)
        script: |
          keychain initialize
          app-store-connect fetch-signing-files \
            --apiKeyId "$APP_STORE_CONNECT_KEY_IDENTIFIER" \
            --issuerId "$APP_STORE_CONNECT_ISSUER_ID" \
            --privateKey "$APP_STORE_CONNECT_PRIVATE_KEY" \
            --type IOS_APP_STORE \
            --bundle-id "$APP_ID" \
            --create
          keychain add-certificates
          xcode-project use-profiles

      - name: Xcode build (archive)
        script: |
          xcodebuild -workspace "$XCODE_WORKSPACE" \
                     -scheme "$XCODE_SCHEME" \
                     -configuration Release \
                     -archivePath "$CM_BUILD_DIR/Build/App.xcarchive" \
                     clean archive \
                     DEVELOPMENT_TEAM="$APPLE_TEAM_ID"

      - name: Create exportOptions.plist
        script: |
          cat > "$CM_BUILD_DIR/exportOptions.plist" <<'PLIST'
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>method</key><string>app-store</string>
            <key>signingStyle</key><string>manual</string>
            <key>stripSwiftSymbols</key><true/>
            <key>compileBitcode</key><true/>
            <key>destination</key><string>export</string>
          </dict>
          </plist>
          PLIST

      - name: Export IPA
        script: |
          xcodebuild -exportArchive \
                     -archivePath "$CM_BUILD_DIR/Build/App.xcarchive" \
                     -exportOptionsPlist "$CM_BUILD_DIR/exportOptions.plist" \
                     -exportPath "$CM_BUILD_DIR/Build/ipa"

      - name: Publish to App Store Connect
        script: |
          app-store-connect publish \
            --apiKeyId "$APP_STORE_CONNECT_KEY_IDENTIFIER" \
            --issuerId "$APP_STORE_CONNECT_ISSUER_ID" \
            --privateKey "$APP_STORE_CONNECT_PRIVATE_KEY" \
            --path "$CM_BUILD_DIR/Build/ipa/App.ipa" \
            --bundleId "$APP_ID"

    artifacts:
      - Build/ipa/*.ipa
      - ios/App/*.dSYM.zip
